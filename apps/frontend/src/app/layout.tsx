import { Footer } from '@/components/footer';
import { Navbar } from '@/components/navbar';
import { Toaster } from '@/components/ui/sonner';
import { useAuth } from '@/hooks/use-auth.hook';
import { Metadata } from 'next';

import { ThemeProvider } from '@/components/theme-provider';
import { TooltipProvider } from '@/components/ui/tooltip';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { Inter } from 'next/font/google';
import './globals.css';

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'NextJS Frontend',
  description: 'Generated by create next app',
};

export const queryClient = new QueryClient();

export const RootLayout: React.FC<React.PropsWithChildren> = ({ children }) => {
  const { authenticated, isLoading } = useAuth();

  // if (!publicPage && isLoading) {
  //   return (
  //     <div className='flex min-h-screen w-full flex-col'>
  //       <Navbar currentHref={currentHref} navGroup={navGroup} />
  //       <div
  //         className='flex min-h-[calc(100vh_-_theme(spacing.84))] flex-1 flex-col gap-4 bg-muted/40 p-4 md:gap-8'
  //         style={{ background: `url(${bgPattern}) 20px 20px repeat` }}
  //       >
  //         <BreadcrumbComposite />
  //         <main>
  //           <div className='flex justify-center'>
  //             <LoadingSpinner />
  //           </div>
  //         </main>
  //       </div>
  //       <Footer />
  //     </div>
  //   );
  // }

  // if (!publicPage && !authenticated) {
  //   return <Navigate to='/login' />;
  // }

  return (
    <html lang='hu'>
      <body className={inter.className}>
        <QueryClientProvider client={queryClient}>
          <ThemeProvider defaultTheme='dark' storageKey='vite-ui-theme'>
            <TooltipProvider>
              <div className='flex min-h-screen w-full flex-col'>
                <Navbar />
                <div className='flex min-h-[calc(100vh_-_theme(spacing.84))] flex-1 flex-col gap-4 bg-muted/40 p-4 md:gap-8'>
                  <main>
                    <div>{children}</div>
                  </main>
                  <Toaster />
                </div>
                <Footer />
              </div>
            </TooltipProvider>
          </ThemeProvider>
        </QueryClientProvider>
      </body>
    </html>
  );
};
